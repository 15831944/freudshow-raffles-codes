//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.3053
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 2.0.50727.3053 版自动生成。
// 
#pragma warning disable 1591

namespace CAD_Practice.ProjectQuota {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ProjectInfoSoap", Namespace="http://tempuri.org/")]
    public partial class ProjectInfo : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllSystemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllSystemByNewFlagOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectListStrOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectListStrNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDrawingTypeStrOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDrawingPrintAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDisciplineTypeStrOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectQuotasOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProjectInfosQuotaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDisciplineQuotaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDrawingTitleQuotaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDrawingQuotaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDrawingPrintAddQuotaOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ProjectInfo() {
            this.Url = global::CAD_Practice.Properties.Settings.Default.CAD_Practice_ProjectQuota_ProjectInfo;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetSystemCompletedEventHandler GetSystemCompleted;
        
        /// <remarks/>
        public event GetAllSystemCompletedEventHandler GetAllSystemCompleted;
        
        /// <remarks/>
        public event GetAllSystemByNewFlagCompletedEventHandler GetAllSystemByNewFlagCompleted;
        
        /// <remarks/>
        public event GetProjectCompletedEventHandler GetProjectCompleted;
        
        /// <remarks/>
        public event GetProjectListStrCompletedEventHandler GetProjectListStrCompleted;
        
        /// <remarks/>
        public event GetProjectListStrNewCompletedEventHandler GetProjectListStrNewCompleted;
        
        /// <remarks/>
        public event GetProjectInfoCompletedEventHandler GetProjectInfoCompleted;
        
        /// <remarks/>
        public event GetDrawingTypeStrCompletedEventHandler GetDrawingTypeStrCompleted;
        
        /// <remarks/>
        public event GetDrawingPrintAddCompletedEventHandler GetDrawingPrintAddCompleted;
        
        /// <remarks/>
        public event GetDisciplineTypeStrCompletedEventHandler GetDisciplineTypeStrCompleted;
        
        /// <remarks/>
        public event GetProjectQuotasCompletedEventHandler GetProjectQuotasCompleted;
        
        /// <remarks/>
        public event GetProjectInfosQuotaCompletedEventHandler GetProjectInfosQuotaCompleted;
        
        /// <remarks/>
        public event GetDisciplineQuotaCompletedEventHandler GetDisciplineQuotaCompleted;
        
        /// <remarks/>
        public event GetDrawingTitleQuotaCompletedEventHandler GetDrawingTitleQuotaCompleted;
        
        /// <remarks/>
        public event GetDrawingQuotaCompletedEventHandler GetDrawingQuotaCompleted;
        
        /// <remarks/>
        public event GetDrawingPrintAddQuotaCompletedEventHandler GetDrawingPrintAddQuotaCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSystem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProjectSystem[] GetSystem(int projectId) {
            object[] results = this.Invoke("GetSystem", new object[] {
                        projectId});
            return ((ProjectSystem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSystemAsync(int projectId) {
            this.GetSystemAsync(projectId, null);
        }
        
        /// <remarks/>
        public void GetSystemAsync(int projectId, object userState) {
            if ((this.GetSystemOperationCompleted == null)) {
                this.GetSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSystemOperationCompleted);
            }
            this.InvokeAsync("GetSystem", new object[] {
                        projectId}, this.GetSystemOperationCompleted, userState);
        }
        
        private void OnGetSystemOperationCompleted(object arg) {
            if ((this.GetSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSystemCompleted(this, new GetSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllSystem", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProjectSystem[] GetAllSystem() {
            object[] results = this.Invoke("GetAllSystem", new object[0]);
            return ((ProjectSystem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllSystemAsync() {
            this.GetAllSystemAsync(null);
        }
        
        /// <remarks/>
        public void GetAllSystemAsync(object userState) {
            if ((this.GetAllSystemOperationCompleted == null)) {
                this.GetAllSystemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSystemOperationCompleted);
            }
            this.InvokeAsync("GetAllSystem", new object[0], this.GetAllSystemOperationCompleted, userState);
        }
        
        private void OnGetAllSystemOperationCompleted(object arg) {
            if ((this.GetAllSystemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllSystemCompleted(this, new GetAllSystemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllSystemByNewFlag", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProjectSystem[] GetAllSystemByNewFlag(int projectId, string newFlag) {
            object[] results = this.Invoke("GetAllSystemByNewFlag", new object[] {
                        projectId,
                        newFlag});
            return ((ProjectSystem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllSystemByNewFlagAsync(int projectId, string newFlag) {
            this.GetAllSystemByNewFlagAsync(projectId, newFlag, null);
        }
        
        /// <remarks/>
        public void GetAllSystemByNewFlagAsync(int projectId, string newFlag, object userState) {
            if ((this.GetAllSystemByNewFlagOperationCompleted == null)) {
                this.GetAllSystemByNewFlagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllSystemByNewFlagOperationCompleted);
            }
            this.InvokeAsync("GetAllSystemByNewFlag", new object[] {
                        projectId,
                        newFlag}, this.GetAllSystemByNewFlagOperationCompleted, userState);
        }
        
        private void OnGetAllSystemByNewFlagOperationCompleted(object arg) {
            if ((this.GetAllSystemByNewFlagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllSystemByNewFlagCompleted(this, new GetAllSystemByNewFlagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Project[] GetProject() {
            object[] results = this.Invoke("GetProject", new object[0]);
            return ((Project[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectAsync() {
            this.GetProjectAsync(null);
        }
        
        /// <remarks/>
        public void GetProjectAsync(object userState) {
            if ((this.GetProjectOperationCompleted == null)) {
                this.GetProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectOperationCompleted);
            }
            this.InvokeAsync("GetProject", new object[0], this.GetProjectOperationCompleted, userState);
        }
        
        private void OnGetProjectOperationCompleted(object arg) {
            if ((this.GetProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectCompleted(this, new GetProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProjectListStr", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProjectListStr() {
            object[] results = this.Invoke("GetProjectListStr", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectListStrAsync() {
            this.GetProjectListStrAsync(null);
        }
        
        /// <remarks/>
        public void GetProjectListStrAsync(object userState) {
            if ((this.GetProjectListStrOperationCompleted == null)) {
                this.GetProjectListStrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectListStrOperationCompleted);
            }
            this.InvokeAsync("GetProjectListStr", new object[0], this.GetProjectListStrOperationCompleted, userState);
        }
        
        private void OnGetProjectListStrOperationCompleted(object arg) {
            if ((this.GetProjectListStrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectListStrCompleted(this, new GetProjectListStrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProjectListStrNew", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProjectListStrNew() {
            object[] results = this.Invoke("GetProjectListStrNew", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectListStrNewAsync() {
            this.GetProjectListStrNewAsync(null);
        }
        
        /// <remarks/>
        public void GetProjectListStrNewAsync(object userState) {
            if ((this.GetProjectListStrNewOperationCompleted == null)) {
                this.GetProjectListStrNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectListStrNewOperationCompleted);
            }
            this.InvokeAsync("GetProjectListStrNew", new object[0], this.GetProjectListStrNewOperationCompleted, userState);
        }
        
        private void OnGetProjectListStrNewOperationCompleted(object arg) {
            if ((this.GetProjectListStrNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectListStrNewCompleted(this, new GetProjectListStrNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProjectInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProjectInfo(string projectName) {
            object[] results = this.Invoke("GetProjectInfo", new object[] {
                        projectName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectInfoAsync(string projectName) {
            this.GetProjectInfoAsync(projectName, null);
        }
        
        /// <remarks/>
        public void GetProjectInfoAsync(string projectName, object userState) {
            if ((this.GetProjectInfoOperationCompleted == null)) {
                this.GetProjectInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectInfoOperationCompleted);
            }
            this.InvokeAsync("GetProjectInfo", new object[] {
                        projectName}, this.GetProjectInfoOperationCompleted, userState);
        }
        
        private void OnGetProjectInfoOperationCompleted(object arg) {
            if ((this.GetProjectInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectInfoCompleted(this, new GetProjectInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDrawingTypeStr", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDrawingTypeStr(string projectid, string disciplineid) {
            object[] results = this.Invoke("GetDrawingTypeStr", new object[] {
                        projectid,
                        disciplineid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDrawingTypeStrAsync(string projectid, string disciplineid) {
            this.GetDrawingTypeStrAsync(projectid, disciplineid, null);
        }
        
        /// <remarks/>
        public void GetDrawingTypeStrAsync(string projectid, string disciplineid, object userState) {
            if ((this.GetDrawingTypeStrOperationCompleted == null)) {
                this.GetDrawingTypeStrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDrawingTypeStrOperationCompleted);
            }
            this.InvokeAsync("GetDrawingTypeStr", new object[] {
                        projectid,
                        disciplineid}, this.GetDrawingTypeStrOperationCompleted, userState);
        }
        
        private void OnGetDrawingTypeStrOperationCompleted(object arg) {
            if ((this.GetDrawingTypeStrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDrawingTypeStrCompleted(this, new GetDrawingTypeStrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDrawingPrintAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDrawingPrintAdd(string sdes) {
            object[] results = this.Invoke("GetDrawingPrintAdd", new object[] {
                        sdes});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDrawingPrintAddAsync(string sdes) {
            this.GetDrawingPrintAddAsync(sdes, null);
        }
        
        /// <remarks/>
        public void GetDrawingPrintAddAsync(string sdes, object userState) {
            if ((this.GetDrawingPrintAddOperationCompleted == null)) {
                this.GetDrawingPrintAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDrawingPrintAddOperationCompleted);
            }
            this.InvokeAsync("GetDrawingPrintAdd", new object[] {
                        sdes}, this.GetDrawingPrintAddOperationCompleted, userState);
        }
        
        private void OnGetDrawingPrintAddOperationCompleted(object arg) {
            if ((this.GetDrawingPrintAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDrawingPrintAddCompleted(this, new GetDrawingPrintAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDisciplineTypeStr", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDisciplineTypeStr(string projectid) {
            object[] results = this.Invoke("GetDisciplineTypeStr", new object[] {
                        projectid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDisciplineTypeStrAsync(string projectid) {
            this.GetDisciplineTypeStrAsync(projectid, null);
        }
        
        /// <remarks/>
        public void GetDisciplineTypeStrAsync(string projectid, object userState) {
            if ((this.GetDisciplineTypeStrOperationCompleted == null)) {
                this.GetDisciplineTypeStrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDisciplineTypeStrOperationCompleted);
            }
            this.InvokeAsync("GetDisciplineTypeStr", new object[] {
                        projectid}, this.GetDisciplineTypeStrOperationCompleted, userState);
        }
        
        private void OnGetDisciplineTypeStrOperationCompleted(object arg) {
            if ((this.GetDisciplineTypeStrCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDisciplineTypeStrCompleted(this, new GetDisciplineTypeStrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProjectQuotas", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetProjectQuotas() {
            object[] results = this.Invoke("GetProjectQuotas", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectQuotasAsync() {
            this.GetProjectQuotasAsync(null);
        }
        
        /// <remarks/>
        public void GetProjectQuotasAsync(object userState) {
            if ((this.GetProjectQuotasOperationCompleted == null)) {
                this.GetProjectQuotasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectQuotasOperationCompleted);
            }
            this.InvokeAsync("GetProjectQuotas", new object[0], this.GetProjectQuotasOperationCompleted, userState);
        }
        
        private void OnGetProjectQuotasOperationCompleted(object arg) {
            if ((this.GetProjectQuotasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectQuotasCompleted(this, new GetProjectQuotasCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProjectInfosQuota", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProjectInfosQuota(string project) {
            object[] results = this.Invoke("GetProjectInfosQuota", new object[] {
                        project});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProjectInfosQuotaAsync(string project) {
            this.GetProjectInfosQuotaAsync(project, null);
        }
        
        /// <remarks/>
        public void GetProjectInfosQuotaAsync(string project, object userState) {
            if ((this.GetProjectInfosQuotaOperationCompleted == null)) {
                this.GetProjectInfosQuotaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProjectInfosQuotaOperationCompleted);
            }
            this.InvokeAsync("GetProjectInfosQuota", new object[] {
                        project}, this.GetProjectInfosQuotaOperationCompleted, userState);
        }
        
        private void OnGetProjectInfosQuotaOperationCompleted(object arg) {
            if ((this.GetProjectInfosQuotaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProjectInfosQuotaCompleted(this, new GetProjectInfosQuotaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDisciplineQuota", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetDisciplineQuota(string project) {
            object[] results = this.Invoke("GetDisciplineQuota", new object[] {
                        project});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDisciplineQuotaAsync(string project) {
            this.GetDisciplineQuotaAsync(project, null);
        }
        
        /// <remarks/>
        public void GetDisciplineQuotaAsync(string project, object userState) {
            if ((this.GetDisciplineQuotaOperationCompleted == null)) {
                this.GetDisciplineQuotaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDisciplineQuotaOperationCompleted);
            }
            this.InvokeAsync("GetDisciplineQuota", new object[] {
                        project}, this.GetDisciplineQuotaOperationCompleted, userState);
        }
        
        private void OnGetDisciplineQuotaOperationCompleted(object arg) {
            if ((this.GetDisciplineQuotaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDisciplineQuotaCompleted(this, new GetDisciplineQuotaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDrawingTitleQuota", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDrawingTitleQuota(string projectName, string drawingNo, string rev) {
            object[] results = this.Invoke("GetDrawingTitleQuota", new object[] {
                        projectName,
                        drawingNo,
                        rev});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDrawingTitleQuotaAsync(string projectName, string drawingNo, string rev) {
            this.GetDrawingTitleQuotaAsync(projectName, drawingNo, rev, null);
        }
        
        /// <remarks/>
        public void GetDrawingTitleQuotaAsync(string projectName, string drawingNo, string rev, object userState) {
            if ((this.GetDrawingTitleQuotaOperationCompleted == null)) {
                this.GetDrawingTitleQuotaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDrawingTitleQuotaOperationCompleted);
            }
            this.InvokeAsync("GetDrawingTitleQuota", new object[] {
                        projectName,
                        drawingNo,
                        rev}, this.GetDrawingTitleQuotaOperationCompleted, userState);
        }
        
        private void OnGetDrawingTitleQuotaOperationCompleted(object arg) {
            if ((this.GetDrawingTitleQuotaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDrawingTitleQuotaCompleted(this, new GetDrawingTitleQuotaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDrawingQuota", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDrawingQuota(string projectid, string disciplineid) {
            object[] results = this.Invoke("GetDrawingQuota", new object[] {
                        projectid,
                        disciplineid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDrawingQuotaAsync(string projectid, string disciplineid) {
            this.GetDrawingQuotaAsync(projectid, disciplineid, null);
        }
        
        /// <remarks/>
        public void GetDrawingQuotaAsync(string projectid, string disciplineid, object userState) {
            if ((this.GetDrawingQuotaOperationCompleted == null)) {
                this.GetDrawingQuotaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDrawingQuotaOperationCompleted);
            }
            this.InvokeAsync("GetDrawingQuota", new object[] {
                        projectid,
                        disciplineid}, this.GetDrawingQuotaOperationCompleted, userState);
        }
        
        private void OnGetDrawingQuotaOperationCompleted(object arg) {
            if ((this.GetDrawingQuotaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDrawingQuotaCompleted(this, new GetDrawingQuotaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDrawingPrintAddQuota", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDrawingPrintAddQuota(string sdes) {
            object[] results = this.Invoke("GetDrawingPrintAddQuota", new object[] {
                        sdes});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDrawingPrintAddQuotaAsync(string sdes) {
            this.GetDrawingPrintAddQuotaAsync(sdes, null);
        }
        
        /// <remarks/>
        public void GetDrawingPrintAddQuotaAsync(string sdes, object userState) {
            if ((this.GetDrawingPrintAddQuotaOperationCompleted == null)) {
                this.GetDrawingPrintAddQuotaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDrawingPrintAddQuotaOperationCompleted);
            }
            this.InvokeAsync("GetDrawingPrintAddQuota", new object[] {
                        sdes}, this.GetDrawingPrintAddQuotaOperationCompleted, userState);
        }
        
        private void OnGetDrawingPrintAddQuotaOperationCompleted(object arg) {
            if ((this.GetDrawingPrintAddQuotaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDrawingPrintAddQuotaCompleted(this, new GetDrawingPrintAddQuotaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ProjectSystem {
        
        private string project_IdField;
        
        private int system_IdField;
        
        private string descriptionField;
        
        private string newFlagField;
        
        private int parent_IdField;
        
        private string codeField;
        
        /// <remarks/>
        public string Project_Id {
            get {
                return this.project_IdField;
            }
            set {
                this.project_IdField = value;
            }
        }
        
        /// <remarks/>
        public int System_Id {
            get {
                return this.system_IdField;
            }
            set {
                this.system_IdField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string NewFlag {
            get {
                return this.newFlagField;
            }
            set {
                this.newFlagField = value;
            }
        }
        
        /// <remarks/>
        public int Parent_Id {
            get {
                return this.parent_IdField;
            }
            set {
                this.parent_IdField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3053")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Project {
        
        private int idField;
        
        private string nameField;
        
        private string projectIDField;
        
        private string classField;
        
        private string ownerField;
        
        private decimal bUDGET_WEIGHTField;
        
        private string statusField;
        
        private string pFLAGField;
        
        private string full_NameField;
        
        private string newFlagField;
        
        private string mFlagField;
        
        private string projectTypeField;
        
        private string shipTypeField;
        
        private string projectCodeField;
        
        private string flagStateField;
        
        private string projectSummaryField;
        
        private string progressField;
        
        private string startTimeField;
        
        private string startWorkingtimeField;
        
        private string peField;
        
        private string shipOwnerField;
        
        private string briefClassField;
        
        private string remarkField;
        
        private int numField;
        
        private string isRestrictedField;
        
        private string oflagField;
        
        private System.Nullable<System.DateTime> sTATUS_TIMEField;
        
        private string uPDATERField;
        
        private System.Nullable<System.DateTime> uPDATEDATEField;
        
        private string cREATERField;
        
        private System.Nullable<System.DateTime> cREATEDATEField;
        
        private System.Nullable<System.DateTime> cONTRANTSTARTDATEField;
        
        private System.Nullable<System.DateTime> cONTRANTDELIVERYDATEField;
        
        private string oWNER_REFNOField;
        
        private string cLASS_REFNOField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string ProjectID {
            get {
                return this.projectIDField;
            }
            set {
                this.projectIDField = value;
            }
        }
        
        /// <remarks/>
        public string Class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        public string Owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        public decimal BUDGET_WEIGHT {
            get {
                return this.bUDGET_WEIGHTField;
            }
            set {
                this.bUDGET_WEIGHTField = value;
            }
        }
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string PFLAG {
            get {
                return this.pFLAGField;
            }
            set {
                this.pFLAGField = value;
            }
        }
        
        /// <remarks/>
        public string Full_Name {
            get {
                return this.full_NameField;
            }
            set {
                this.full_NameField = value;
            }
        }
        
        /// <remarks/>
        public string NewFlag {
            get {
                return this.newFlagField;
            }
            set {
                this.newFlagField = value;
            }
        }
        
        /// <remarks/>
        public string MFlag {
            get {
                return this.mFlagField;
            }
            set {
                this.mFlagField = value;
            }
        }
        
        /// <remarks/>
        public string ProjectType {
            get {
                return this.projectTypeField;
            }
            set {
                this.projectTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ShipType {
            get {
                return this.shipTypeField;
            }
            set {
                this.shipTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ProjectCode {
            get {
                return this.projectCodeField;
            }
            set {
                this.projectCodeField = value;
            }
        }
        
        /// <remarks/>
        public string FlagState {
            get {
                return this.flagStateField;
            }
            set {
                this.flagStateField = value;
            }
        }
        
        /// <remarks/>
        public string ProjectSummary {
            get {
                return this.projectSummaryField;
            }
            set {
                this.projectSummaryField = value;
            }
        }
        
        /// <remarks/>
        public string Progress {
            get {
                return this.progressField;
            }
            set {
                this.progressField = value;
            }
        }
        
        /// <remarks/>
        public string StartTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        public string StartWorkingtime {
            get {
                return this.startWorkingtimeField;
            }
            set {
                this.startWorkingtimeField = value;
            }
        }
        
        /// <remarks/>
        public string PE {
            get {
                return this.peField;
            }
            set {
                this.peField = value;
            }
        }
        
        /// <remarks/>
        public string ShipOwner {
            get {
                return this.shipOwnerField;
            }
            set {
                this.shipOwnerField = value;
            }
        }
        
        /// <remarks/>
        public string BriefClass {
            get {
                return this.briefClassField;
            }
            set {
                this.briefClassField = value;
            }
        }
        
        /// <remarks/>
        public string Remark {
            get {
                return this.remarkField;
            }
            set {
                this.remarkField = value;
            }
        }
        
        /// <remarks/>
        public int Num {
            get {
                return this.numField;
            }
            set {
                this.numField = value;
            }
        }
        
        /// <remarks/>
        public string IsRestricted {
            get {
                return this.isRestrictedField;
            }
            set {
                this.isRestrictedField = value;
            }
        }
        
        /// <remarks/>
        public string Oflag {
            get {
                return this.oflagField;
            }
            set {
                this.oflagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> STATUS_TIME {
            get {
                return this.sTATUS_TIMEField;
            }
            set {
                this.sTATUS_TIMEField = value;
            }
        }
        
        /// <remarks/>
        public string UPDATER {
            get {
                return this.uPDATERField;
            }
            set {
                this.uPDATERField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> UPDATEDATE {
            get {
                return this.uPDATEDATEField;
            }
            set {
                this.uPDATEDATEField = value;
            }
        }
        
        /// <remarks/>
        public string CREATER {
            get {
                return this.cREATERField;
            }
            set {
                this.cREATERField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CREATEDATE {
            get {
                return this.cREATEDATEField;
            }
            set {
                this.cREATEDATEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CONTRANTSTARTDATE {
            get {
                return this.cONTRANTSTARTDATEField;
            }
            set {
                this.cONTRANTSTARTDATEField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CONTRANTDELIVERYDATE {
            get {
                return this.cONTRANTDELIVERYDATEField;
            }
            set {
                this.cONTRANTDELIVERYDATEField = value;
            }
        }
        
        /// <remarks/>
        public string OWNER_REFNO {
            get {
                return this.oWNER_REFNOField;
            }
            set {
                this.oWNER_REFNOField = value;
            }
        }
        
        /// <remarks/>
        public string CLASS_REFNO {
            get {
                return this.cLASS_REFNOField;
            }
            set {
                this.cLASS_REFNOField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetSystemCompletedEventHandler(object sender, GetSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProjectSystem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProjectSystem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetAllSystemCompletedEventHandler(object sender, GetAllSystemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllSystemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllSystemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProjectSystem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProjectSystem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetAllSystemByNewFlagCompletedEventHandler(object sender, GetAllSystemByNewFlagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllSystemByNewFlagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllSystemByNewFlagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProjectSystem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProjectSystem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetProjectCompletedEventHandler(object sender, GetProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Project[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Project[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetProjectListStrCompletedEventHandler(object sender, GetProjectListStrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectListStrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectListStrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetProjectListStrNewCompletedEventHandler(object sender, GetProjectListStrNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectListStrNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectListStrNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetProjectInfoCompletedEventHandler(object sender, GetProjectInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetDrawingTypeStrCompletedEventHandler(object sender, GetDrawingTypeStrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDrawingTypeStrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDrawingTypeStrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetDrawingPrintAddCompletedEventHandler(object sender, GetDrawingPrintAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDrawingPrintAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDrawingPrintAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetDisciplineTypeStrCompletedEventHandler(object sender, GetDisciplineTypeStrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDisciplineTypeStrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDisciplineTypeStrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetProjectQuotasCompletedEventHandler(object sender, GetProjectQuotasCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectQuotasCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectQuotasCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetProjectInfosQuotaCompletedEventHandler(object sender, GetProjectInfosQuotaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProjectInfosQuotaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProjectInfosQuotaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetDisciplineQuotaCompletedEventHandler(object sender, GetDisciplineQuotaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDisciplineQuotaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDisciplineQuotaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetDrawingTitleQuotaCompletedEventHandler(object sender, GetDrawingTitleQuotaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDrawingTitleQuotaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDrawingTitleQuotaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetDrawingQuotaCompletedEventHandler(object sender, GetDrawingQuotaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDrawingQuotaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDrawingQuotaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetDrawingPrintAddQuotaCompletedEventHandler(object sender, GetDrawingPrintAddQuotaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDrawingPrintAddQuotaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDrawingPrintAddQuotaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591