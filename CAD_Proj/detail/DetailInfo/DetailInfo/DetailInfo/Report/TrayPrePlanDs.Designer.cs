//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.3623
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DetailInfo.Report {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("TrayPrePlanDs")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class TrayPrePlanDs : global::System.Data.DataSet {
        
        private TRAY_PREPLAN_TABDataTable tableTRAY_PREPLAN_TAB;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TrayPrePlanDs() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected TrayPrePlanDs(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TRAY_PREPLAN_TAB"] != null)) {
                    base.Tables.Add(new TRAY_PREPLAN_TABDataTable(ds.Tables["TRAY_PREPLAN_TAB"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TRAY_PREPLAN_TABDataTable TRAY_PREPLAN_TAB {
            get {
                return this.tableTRAY_PREPLAN_TAB;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            TrayPrePlanDs cln = ((TrayPrePlanDs)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TRAY_PREPLAN_TAB"] != null)) {
                    base.Tables.Add(new TRAY_PREPLAN_TABDataTable(ds.Tables["TRAY_PREPLAN_TAB"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTRAY_PREPLAN_TAB = ((TRAY_PREPLAN_TABDataTable)(base.Tables["TRAY_PREPLAN_TAB"]));
            if ((initTable == true)) {
                if ((this.tableTRAY_PREPLAN_TAB != null)) {
                    this.tableTRAY_PREPLAN_TAB.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "TrayPrePlanDs";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/TrayPrePlanDs.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTRAY_PREPLAN_TAB = new TRAY_PREPLAN_TABDataTable();
            base.Tables.Add(this.tableTRAY_PREPLAN_TAB);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTRAY_PREPLAN_TAB() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            TrayPrePlanDs ds = new TrayPrePlanDs();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void TRAY_PREPLAN_TABRowChangeEventHandler(object sender, TRAY_PREPLAN_TABRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TRAY_PREPLAN_TABDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnTRAYNO;
            
            private global::System.Data.DataColumn columnBLOCKNO;
            
            private global::System.Data.DataColumn columnREFER_DRAWING;
            
            private global::System.Data.DataColumn columnSPOOL_NUMBER;
            
            private global::System.Data.DataColumn columnTRAY_WEIGHT;
            
            private global::System.Data.DataColumn columnRATED_HOUR;
            
            private global::System.Data.DataColumn columnPREPLAN_STARTTIME;
            
            private global::System.Data.DataColumn columnPREPLAN_ENDTIME;
            
            private global::System.Data.DataColumn columnWEEK;
            
            private global::System.Data.DataColumn columnWEEKDAY;
            
            private global::System.Data.DataColumn columnWEEK_REAL_HOUR;
            
            private global::System.Data.DataColumn columnSUM_REAL_HOUR;
            
            private global::System.Data.DataColumn columnHOUR_PERCENT;
            
            private global::System.Data.DataColumn columnPROGRESS_PERCENT;
            
            private global::System.Data.DataColumn columnPROGRESS_HOUR;
            
            private global::System.Data.DataColumn columnKPI;
            
            private global::System.Data.DataColumn columnDATA_SOURCE;
            
            private global::System.Data.DataColumn columnPROGRESS_STATE;
            
            private global::System.Data.DataColumn columnPROJECT_ID;
            
            private global::System.Data.DataColumn columnPREPAREDBY;
            
            private global::System.Data.DataColumn columnPREPAREDATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRAY_PREPLAN_TABDataTable() {
                this.TableName = "TRAY_PREPLAN_TAB";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TRAY_PREPLAN_TABDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TRAY_PREPLAN_TABDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRAYNOColumn {
                get {
                    return this.columnTRAYNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLOCKNOColumn {
                get {
                    return this.columnBLOCKNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REFER_DRAWINGColumn {
                get {
                    return this.columnREFER_DRAWING;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SPOOL_NUMBERColumn {
                get {
                    return this.columnSPOOL_NUMBER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRAY_WEIGHTColumn {
                get {
                    return this.columnTRAY_WEIGHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RATED_HOURColumn {
                get {
                    return this.columnRATED_HOUR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PREPLAN_STARTTIMEColumn {
                get {
                    return this.columnPREPLAN_STARTTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PREPLAN_ENDTIMEColumn {
                get {
                    return this.columnPREPLAN_ENDTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WEEKColumn {
                get {
                    return this.columnWEEK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WEEKDAYColumn {
                get {
                    return this.columnWEEKDAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WEEK_REAL_HOURColumn {
                get {
                    return this.columnWEEK_REAL_HOUR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SUM_REAL_HOURColumn {
                get {
                    return this.columnSUM_REAL_HOUR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HOUR_PERCENTColumn {
                get {
                    return this.columnHOUR_PERCENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROGRESS_PERCENTColumn {
                get {
                    return this.columnPROGRESS_PERCENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROGRESS_HOURColumn {
                get {
                    return this.columnPROGRESS_HOUR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KPIColumn {
                get {
                    return this.columnKPI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DATA_SOURCEColumn {
                get {
                    return this.columnDATA_SOURCE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROGRESS_STATEColumn {
                get {
                    return this.columnPROGRESS_STATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PROJECT_IDColumn {
                get {
                    return this.columnPROJECT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PREPAREDBYColumn {
                get {
                    return this.columnPREPAREDBY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PREPAREDATEColumn {
                get {
                    return this.columnPREPAREDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRAY_PREPLAN_TABRow this[int index] {
                get {
                    return ((TRAY_PREPLAN_TABRow)(this.Rows[index]));
                }
            }
            
            public event TRAY_PREPLAN_TABRowChangeEventHandler TRAY_PREPLAN_TABRowChanging;
            
            public event TRAY_PREPLAN_TABRowChangeEventHandler TRAY_PREPLAN_TABRowChanged;
            
            public event TRAY_PREPLAN_TABRowChangeEventHandler TRAY_PREPLAN_TABRowDeleting;
            
            public event TRAY_PREPLAN_TABRowChangeEventHandler TRAY_PREPLAN_TABRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTRAY_PREPLAN_TABRow(TRAY_PREPLAN_TABRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRAY_PREPLAN_TABRow AddTRAY_PREPLAN_TABRow(
                        decimal ID, 
                        string TRAYNO, 
                        string BLOCKNO, 
                        string REFER_DRAWING, 
                        decimal SPOOL_NUMBER, 
                        decimal TRAY_WEIGHT, 
                        decimal RATED_HOUR, 
                        decimal PREPLAN_STARTTIME, 
                        decimal PREPLAN_ENDTIME, 
                        decimal WEEK, 
                        decimal WEEKDAY, 
                        decimal WEEK_REAL_HOUR, 
                        decimal SUM_REAL_HOUR, 
                        decimal HOUR_PERCENT, 
                        decimal PROGRESS_PERCENT, 
                        decimal PROGRESS_HOUR, 
                        decimal KPI, 
                        string DATA_SOURCE, 
                        string PROGRESS_STATE, 
                        string PROJECT_ID, 
                        string PREPAREDBY, 
                        System.DateTime PREPAREDATE) {
                TRAY_PREPLAN_TABRow rowTRAY_PREPLAN_TABRow = ((TRAY_PREPLAN_TABRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        TRAYNO,
                        BLOCKNO,
                        REFER_DRAWING,
                        SPOOL_NUMBER,
                        TRAY_WEIGHT,
                        RATED_HOUR,
                        PREPLAN_STARTTIME,
                        PREPLAN_ENDTIME,
                        WEEK,
                        WEEKDAY,
                        WEEK_REAL_HOUR,
                        SUM_REAL_HOUR,
                        HOUR_PERCENT,
                        PROGRESS_PERCENT,
                        PROGRESS_HOUR,
                        KPI,
                        DATA_SOURCE,
                        PROGRESS_STATE,
                        PROJECT_ID,
                        PREPAREDBY,
                        PREPAREDATE};
                rowTRAY_PREPLAN_TABRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTRAY_PREPLAN_TABRow);
                return rowTRAY_PREPLAN_TABRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRAY_PREPLAN_TABRow FindByIDTRAYNOBLOCKNOREFER_DRAWINGSPOOL_NUMBER(decimal ID, string TRAYNO, string BLOCKNO, string REFER_DRAWING, decimal SPOOL_NUMBER) {
                return ((TRAY_PREPLAN_TABRow)(this.Rows.Find(new object[] {
                            ID,
                            TRAYNO,
                            BLOCKNO,
                            REFER_DRAWING,
                            SPOOL_NUMBER})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TRAY_PREPLAN_TABDataTable cln = ((TRAY_PREPLAN_TABDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TRAY_PREPLAN_TABDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnTRAYNO = base.Columns["TRAYNO"];
                this.columnBLOCKNO = base.Columns["BLOCKNO"];
                this.columnREFER_DRAWING = base.Columns["REFER_DRAWING"];
                this.columnSPOOL_NUMBER = base.Columns["SPOOL_NUMBER"];
                this.columnTRAY_WEIGHT = base.Columns["TRAY_WEIGHT"];
                this.columnRATED_HOUR = base.Columns["RATED_HOUR"];
                this.columnPREPLAN_STARTTIME = base.Columns["PREPLAN_STARTTIME"];
                this.columnPREPLAN_ENDTIME = base.Columns["PREPLAN_ENDTIME"];
                this.columnWEEK = base.Columns["WEEK"];
                this.columnWEEKDAY = base.Columns["WEEKDAY"];
                this.columnWEEK_REAL_HOUR = base.Columns["WEEK_REAL_HOUR"];
                this.columnSUM_REAL_HOUR = base.Columns["SUM_REAL_HOUR"];
                this.columnHOUR_PERCENT = base.Columns["HOUR_PERCENT"];
                this.columnPROGRESS_PERCENT = base.Columns["PROGRESS_PERCENT"];
                this.columnPROGRESS_HOUR = base.Columns["PROGRESS_HOUR"];
                this.columnKPI = base.Columns["KPI"];
                this.columnDATA_SOURCE = base.Columns["DATA_SOURCE"];
                this.columnPROGRESS_STATE = base.Columns["PROGRESS_STATE"];
                this.columnPROJECT_ID = base.Columns["PROJECT_ID"];
                this.columnPREPAREDBY = base.Columns["PREPAREDBY"];
                this.columnPREPAREDATE = base.Columns["PREPAREDATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnTRAYNO = new global::System.Data.DataColumn("TRAYNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRAYNO);
                this.columnBLOCKNO = new global::System.Data.DataColumn("BLOCKNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLOCKNO);
                this.columnREFER_DRAWING = new global::System.Data.DataColumn("REFER_DRAWING", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREFER_DRAWING);
                this.columnSPOOL_NUMBER = new global::System.Data.DataColumn("SPOOL_NUMBER", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPOOL_NUMBER);
                this.columnTRAY_WEIGHT = new global::System.Data.DataColumn("TRAY_WEIGHT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRAY_WEIGHT);
                this.columnRATED_HOUR = new global::System.Data.DataColumn("RATED_HOUR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRATED_HOUR);
                this.columnPREPLAN_STARTTIME = new global::System.Data.DataColumn("PREPLAN_STARTTIME", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREPLAN_STARTTIME);
                this.columnPREPLAN_ENDTIME = new global::System.Data.DataColumn("PREPLAN_ENDTIME", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREPLAN_ENDTIME);
                this.columnWEEK = new global::System.Data.DataColumn("WEEK", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWEEK);
                this.columnWEEKDAY = new global::System.Data.DataColumn("WEEKDAY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWEEKDAY);
                this.columnWEEK_REAL_HOUR = new global::System.Data.DataColumn("WEEK_REAL_HOUR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWEEK_REAL_HOUR);
                this.columnSUM_REAL_HOUR = new global::System.Data.DataColumn("SUM_REAL_HOUR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUM_REAL_HOUR);
                this.columnHOUR_PERCENT = new global::System.Data.DataColumn("HOUR_PERCENT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOUR_PERCENT);
                this.columnPROGRESS_PERCENT = new global::System.Data.DataColumn("PROGRESS_PERCENT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROGRESS_PERCENT);
                this.columnPROGRESS_HOUR = new global::System.Data.DataColumn("PROGRESS_HOUR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROGRESS_HOUR);
                this.columnKPI = new global::System.Data.DataColumn("KPI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKPI);
                this.columnDATA_SOURCE = new global::System.Data.DataColumn("DATA_SOURCE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATA_SOURCE);
                this.columnPROGRESS_STATE = new global::System.Data.DataColumn("PROGRESS_STATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROGRESS_STATE);
                this.columnPROJECT_ID = new global::System.Data.DataColumn("PROJECT_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROJECT_ID);
                this.columnPREPAREDBY = new global::System.Data.DataColumn("PREPAREDBY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREPAREDBY);
                this.columnPREPAREDATE = new global::System.Data.DataColumn("PREPAREDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREPAREDATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID,
                                this.columnTRAYNO,
                                this.columnBLOCKNO,
                                this.columnREFER_DRAWING,
                                this.columnSPOOL_NUMBER}, true));
                this.columnID.AllowDBNull = false;
                this.columnTRAYNO.AllowDBNull = false;
                this.columnTRAYNO.MaxLength = 30;
                this.columnBLOCKNO.AllowDBNull = false;
                this.columnBLOCKNO.MaxLength = 30;
                this.columnREFER_DRAWING.AllowDBNull = false;
                this.columnREFER_DRAWING.MaxLength = 200;
                this.columnSPOOL_NUMBER.AllowDBNull = false;
                this.columnDATA_SOURCE.MaxLength = 60;
                this.columnPROGRESS_STATE.MaxLength = 100;
                this.columnPROJECT_ID.AllowDBNull = false;
                this.columnPROJECT_ID.MaxLength = 60;
                this.columnPREPAREDBY.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRAY_PREPLAN_TABRow NewTRAY_PREPLAN_TABRow() {
                return ((TRAY_PREPLAN_TABRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TRAY_PREPLAN_TABRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TRAY_PREPLAN_TABRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TRAY_PREPLAN_TABRowChanged != null)) {
                    this.TRAY_PREPLAN_TABRowChanged(this, new TRAY_PREPLAN_TABRowChangeEvent(((TRAY_PREPLAN_TABRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TRAY_PREPLAN_TABRowChanging != null)) {
                    this.TRAY_PREPLAN_TABRowChanging(this, new TRAY_PREPLAN_TABRowChangeEvent(((TRAY_PREPLAN_TABRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TRAY_PREPLAN_TABRowDeleted != null)) {
                    this.TRAY_PREPLAN_TABRowDeleted(this, new TRAY_PREPLAN_TABRowChangeEvent(((TRAY_PREPLAN_TABRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TRAY_PREPLAN_TABRowDeleting != null)) {
                    this.TRAY_PREPLAN_TABRowDeleting(this, new TRAY_PREPLAN_TABRowChangeEvent(((TRAY_PREPLAN_TABRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTRAY_PREPLAN_TABRow(TRAY_PREPLAN_TABRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TrayPrePlanDs ds = new TrayPrePlanDs();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TRAY_PREPLAN_TABDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TRAY_PREPLAN_TABRow : global::System.Data.DataRow {
            
            private TRAY_PREPLAN_TABDataTable tableTRAY_PREPLAN_TAB;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TRAY_PREPLAN_TABRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTRAY_PREPLAN_TAB = ((TRAY_PREPLAN_TABDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ID {
                get {
                    return ((decimal)(this[this.tableTRAY_PREPLAN_TAB.IDColumn]));
                }
                set {
                    this[this.tableTRAY_PREPLAN_TAB.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRAYNO {
                get {
                    return ((string)(this[this.tableTRAY_PREPLAN_TAB.TRAYNOColumn]));
                }
                set {
                    this[this.tableTRAY_PREPLAN_TAB.TRAYNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BLOCKNO {
                get {
                    return ((string)(this[this.tableTRAY_PREPLAN_TAB.BLOCKNOColumn]));
                }
                set {
                    this[this.tableTRAY_PREPLAN_TAB.BLOCKNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REFER_DRAWING {
                get {
                    return ((string)(this[this.tableTRAY_PREPLAN_TAB.REFER_DRAWINGColumn]));
                }
                set {
                    this[this.tableTRAY_PREPLAN_TAB.REFER_DRAWINGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SPOOL_NUMBER {
                get {
                    return ((decimal)(this[this.tableTRAY_PREPLAN_TAB.SPOOL_NUMBERColumn]));
                }
                set {
                    this[this.tableTRAY_PREPLAN_TAB.SPOOL_NUMBERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TRAY_WEIGHT {
                get {
                    try {
                        return ((decimal)(this[this.tableTRAY_PREPLAN_TAB.TRAY_WEIGHTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TRAY_PREPLAN_TAB”中列“TRAY_WEIGHT”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRAY_PREPLAN_TAB.TRAY_WEIGHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RATED_HOUR {
                get {
                    try {
                        return ((decimal)(this[this.tableTRAY_PREPLAN_TAB.RATED_HOURColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TRAY_PREPLAN_TAB”中列“RATED_HOUR”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRAY_PREPLAN_TAB.RATED_HOURColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PREPLAN_STARTTIME {
                get {
                    try {
                        return ((decimal)(this[this.tableTRAY_PREPLAN_TAB.PREPLAN_STARTTIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TRAY_PREPLAN_TAB”中列“PREPLAN_STARTTIME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRAY_PREPLAN_TAB.PREPLAN_STARTTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PREPLAN_ENDTIME {
                get {
                    try {
                        return ((decimal)(this[this.tableTRAY_PREPLAN_TAB.PREPLAN_ENDTIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TRAY_PREPLAN_TAB”中列“PREPLAN_ENDTIME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRAY_PREPLAN_TAB.PREPLAN_ENDTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal WEEK {
                get {
                    try {
                        return ((decimal)(this[this.tableTRAY_PREPLAN_TAB.WEEKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TRAY_PREPLAN_TAB”中列“WEEK”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRAY_PREPLAN_TAB.WEEKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal WEEKDAY {
                get {
                    try {
                        return ((decimal)(this[this.tableTRAY_PREPLAN_TAB.WEEKDAYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TRAY_PREPLAN_TAB”中列“WEEKDAY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRAY_PREPLAN_TAB.WEEKDAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal WEEK_REAL_HOUR {
                get {
                    try {
                        return ((decimal)(this[this.tableTRAY_PREPLAN_TAB.WEEK_REAL_HOURColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TRAY_PREPLAN_TAB”中列“WEEK_REAL_HOUR”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRAY_PREPLAN_TAB.WEEK_REAL_HOURColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SUM_REAL_HOUR {
                get {
                    try {
                        return ((decimal)(this[this.tableTRAY_PREPLAN_TAB.SUM_REAL_HOURColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TRAY_PREPLAN_TAB”中列“SUM_REAL_HOUR”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRAY_PREPLAN_TAB.SUM_REAL_HOURColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HOUR_PERCENT {
                get {
                    try {
                        return ((decimal)(this[this.tableTRAY_PREPLAN_TAB.HOUR_PERCENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TRAY_PREPLAN_TAB”中列“HOUR_PERCENT”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRAY_PREPLAN_TAB.HOUR_PERCENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PROGRESS_PERCENT {
                get {
                    try {
                        return ((decimal)(this[this.tableTRAY_PREPLAN_TAB.PROGRESS_PERCENTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TRAY_PREPLAN_TAB”中列“PROGRESS_PERCENT”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRAY_PREPLAN_TAB.PROGRESS_PERCENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PROGRESS_HOUR {
                get {
                    try {
                        return ((decimal)(this[this.tableTRAY_PREPLAN_TAB.PROGRESS_HOURColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TRAY_PREPLAN_TAB”中列“PROGRESS_HOUR”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRAY_PREPLAN_TAB.PROGRESS_HOURColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal KPI {
                get {
                    try {
                        return ((decimal)(this[this.tableTRAY_PREPLAN_TAB.KPIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TRAY_PREPLAN_TAB”中列“KPI”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRAY_PREPLAN_TAB.KPIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DATA_SOURCE {
                get {
                    try {
                        return ((string)(this[this.tableTRAY_PREPLAN_TAB.DATA_SOURCEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TRAY_PREPLAN_TAB”中列“DATA_SOURCE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRAY_PREPLAN_TAB.DATA_SOURCEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PROGRESS_STATE {
                get {
                    try {
                        return ((string)(this[this.tableTRAY_PREPLAN_TAB.PROGRESS_STATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TRAY_PREPLAN_TAB”中列“PROGRESS_STATE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRAY_PREPLAN_TAB.PROGRESS_STATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PROJECT_ID {
                get {
                    return ((string)(this[this.tableTRAY_PREPLAN_TAB.PROJECT_IDColumn]));
                }
                set {
                    this[this.tableTRAY_PREPLAN_TAB.PROJECT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PREPAREDBY {
                get {
                    try {
                        return ((string)(this[this.tableTRAY_PREPLAN_TAB.PREPAREDBYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TRAY_PREPLAN_TAB”中列“PREPAREDBY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRAY_PREPLAN_TAB.PREPAREDBYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PREPAREDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTRAY_PREPLAN_TAB.PREPAREDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“TRAY_PREPLAN_TAB”中列“PREPAREDATE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRAY_PREPLAN_TAB.PREPAREDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRAY_WEIGHTNull() {
                return this.IsNull(this.tableTRAY_PREPLAN_TAB.TRAY_WEIGHTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRAY_WEIGHTNull() {
                this[this.tableTRAY_PREPLAN_TAB.TRAY_WEIGHTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRATED_HOURNull() {
                return this.IsNull(this.tableTRAY_PREPLAN_TAB.RATED_HOURColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRATED_HOURNull() {
                this[this.tableTRAY_PREPLAN_TAB.RATED_HOURColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPREPLAN_STARTTIMENull() {
                return this.IsNull(this.tableTRAY_PREPLAN_TAB.PREPLAN_STARTTIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPREPLAN_STARTTIMENull() {
                this[this.tableTRAY_PREPLAN_TAB.PREPLAN_STARTTIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPREPLAN_ENDTIMENull() {
                return this.IsNull(this.tableTRAY_PREPLAN_TAB.PREPLAN_ENDTIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPREPLAN_ENDTIMENull() {
                this[this.tableTRAY_PREPLAN_TAB.PREPLAN_ENDTIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWEEKNull() {
                return this.IsNull(this.tableTRAY_PREPLAN_TAB.WEEKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWEEKNull() {
                this[this.tableTRAY_PREPLAN_TAB.WEEKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWEEKDAYNull() {
                return this.IsNull(this.tableTRAY_PREPLAN_TAB.WEEKDAYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWEEKDAYNull() {
                this[this.tableTRAY_PREPLAN_TAB.WEEKDAYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWEEK_REAL_HOURNull() {
                return this.IsNull(this.tableTRAY_PREPLAN_TAB.WEEK_REAL_HOURColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWEEK_REAL_HOURNull() {
                this[this.tableTRAY_PREPLAN_TAB.WEEK_REAL_HOURColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSUM_REAL_HOURNull() {
                return this.IsNull(this.tableTRAY_PREPLAN_TAB.SUM_REAL_HOURColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSUM_REAL_HOURNull() {
                this[this.tableTRAY_PREPLAN_TAB.SUM_REAL_HOURColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHOUR_PERCENTNull() {
                return this.IsNull(this.tableTRAY_PREPLAN_TAB.HOUR_PERCENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHOUR_PERCENTNull() {
                this[this.tableTRAY_PREPLAN_TAB.HOUR_PERCENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPROGRESS_PERCENTNull() {
                return this.IsNull(this.tableTRAY_PREPLAN_TAB.PROGRESS_PERCENTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPROGRESS_PERCENTNull() {
                this[this.tableTRAY_PREPLAN_TAB.PROGRESS_PERCENTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPROGRESS_HOURNull() {
                return this.IsNull(this.tableTRAY_PREPLAN_TAB.PROGRESS_HOURColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPROGRESS_HOURNull() {
                this[this.tableTRAY_PREPLAN_TAB.PROGRESS_HOURColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKPINull() {
                return this.IsNull(this.tableTRAY_PREPLAN_TAB.KPIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKPINull() {
                this[this.tableTRAY_PREPLAN_TAB.KPIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDATA_SOURCENull() {
                return this.IsNull(this.tableTRAY_PREPLAN_TAB.DATA_SOURCEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDATA_SOURCENull() {
                this[this.tableTRAY_PREPLAN_TAB.DATA_SOURCEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPROGRESS_STATENull() {
                return this.IsNull(this.tableTRAY_PREPLAN_TAB.PROGRESS_STATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPROGRESS_STATENull() {
                this[this.tableTRAY_PREPLAN_TAB.PROGRESS_STATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPREPAREDBYNull() {
                return this.IsNull(this.tableTRAY_PREPLAN_TAB.PREPAREDBYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPREPAREDBYNull() {
                this[this.tableTRAY_PREPLAN_TAB.PREPAREDBYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPREPAREDATENull() {
                return this.IsNull(this.tableTRAY_PREPLAN_TAB.PREPAREDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPREPAREDATENull() {
                this[this.tableTRAY_PREPLAN_TAB.PREPAREDATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TRAY_PREPLAN_TABRowChangeEvent : global::System.EventArgs {
            
            private TRAY_PREPLAN_TABRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRAY_PREPLAN_TABRowChangeEvent(TRAY_PREPLAN_TABRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRAY_PREPLAN_TABRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591