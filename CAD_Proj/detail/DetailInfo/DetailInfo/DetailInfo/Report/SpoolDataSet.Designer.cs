//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行库版本:2.0.50727.42
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DetailInfo.Report {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("SpoolDataSet")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SpoolDataSet : System.Data.DataSet {
        
        private SPOOLSTATISTICS_TABDataTable tableSPOOLSTATISTICS_TAB;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SpoolDataSet() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected SpoolDataSet(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["SPOOLSTATISTICS_TAB"] != null)) {
                    base.Tables.Add(new SPOOLSTATISTICS_TABDataTable(ds.Tables["SPOOLSTATISTICS_TAB"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SPOOLSTATISTICS_TABDataTable SPOOLSTATISTICS_TAB {
            get {
                return this.tableSPOOLSTATISTICS_TAB;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            SpoolDataSet cln = ((SpoolDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SPOOLSTATISTICS_TAB"] != null)) {
                    base.Tables.Add(new SPOOLSTATISTICS_TABDataTable(ds.Tables["SPOOLSTATISTICS_TAB"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableSPOOLSTATISTICS_TAB = ((SPOOLSTATISTICS_TABDataTable)(base.Tables["SPOOLSTATISTICS_TAB"]));
            if ((initTable == true)) {
                if ((this.tableSPOOLSTATISTICS_TAB != null)) {
                    this.tableSPOOLSTATISTICS_TAB.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "SpoolDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SpoolDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSPOOLSTATISTICS_TAB = new SPOOLSTATISTICS_TABDataTable();
            base.Tables.Add(this.tableSPOOLSTATISTICS_TAB);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSPOOLSTATISTICS_TAB() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            SpoolDataSet ds = new SpoolDataSet();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void SPOOLSTATISTICS_TABRowChangeEventHandler(object sender, SPOOLSTATISTICS_TABRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SPOOLSTATISTICS_TABDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnPROJECTID;
            
            private System.Data.DataColumn columnSYSTEMID;
            
            private System.Data.DataColumn columnDRAWINGNO;
            
            private System.Data.DataColumn columnBLOCKNO;
            
            private System.Data.DataColumn columnINITIALSTATE;
            
            private System.Data.DataColumn columnWAITCHECKED;
            
            private System.Data.DataColumn columnAPPROVEPASS;
            
            private System.Data.DataColumn columnPREPRODUCE;
            
            private System.Data.DataColumn columnWAITALLOCATE;
            
            private System.Data.DataColumn columnONPRODUCE;
            
            private System.Data.DataColumn columnPREQC;
            
            private System.Data.DataColumn columnWAITQC;
            
            private System.Data.DataColumn columnPASSQC;
            
            private System.Data.DataColumn columnTOTAL;
            
            private System.Data.DataColumn columnCOMPLETERATE;
            
            private System.Data.DataColumn columnCOMPLETEINSTALL;
            
            private System.Data.DataColumn columnINSTALLING;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SPOOLSTATISTICS_TABDataTable() {
                this.TableName = "SPOOLSTATISTICS_TAB";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SPOOLSTATISTICS_TABDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SPOOLSTATISTICS_TABDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PROJECTIDColumn {
                get {
                    return this.columnPROJECTID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SYSTEMIDColumn {
                get {
                    return this.columnSYSTEMID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DRAWINGNOColumn {
                get {
                    return this.columnDRAWINGNO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn BLOCKNOColumn {
                get {
                    return this.columnBLOCKNO;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn INITIALSTATEColumn {
                get {
                    return this.columnINITIALSTATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WAITCHECKEDColumn {
                get {
                    return this.columnWAITCHECKED;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn APPROVEPASSColumn {
                get {
                    return this.columnAPPROVEPASS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PREPRODUCEColumn {
                get {
                    return this.columnPREPRODUCE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WAITALLOCATEColumn {
                get {
                    return this.columnWAITALLOCATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ONPRODUCEColumn {
                get {
                    return this.columnONPRODUCE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PREQCColumn {
                get {
                    return this.columnPREQC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WAITQCColumn {
                get {
                    return this.columnWAITQC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PASSQCColumn {
                get {
                    return this.columnPASSQC;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TOTALColumn {
                get {
                    return this.columnTOTAL;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn COMPLETERATEColumn {
                get {
                    return this.columnCOMPLETERATE;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn COMPLETEINSTALLColumn {
                get {
                    return this.columnCOMPLETEINSTALL;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn INSTALLINGColumn {
                get {
                    return this.columnINSTALLING;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SPOOLSTATISTICS_TABRow this[int index] {
                get {
                    return ((SPOOLSTATISTICS_TABRow)(this.Rows[index]));
                }
            }
            
            public event SPOOLSTATISTICS_TABRowChangeEventHandler SPOOLSTATISTICS_TABRowChanging;
            
            public event SPOOLSTATISTICS_TABRowChangeEventHandler SPOOLSTATISTICS_TABRowChanged;
            
            public event SPOOLSTATISTICS_TABRowChangeEventHandler SPOOLSTATISTICS_TABRowDeleting;
            
            public event SPOOLSTATISTICS_TABRowChangeEventHandler SPOOLSTATISTICS_TABRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSPOOLSTATISTICS_TABRow(SPOOLSTATISTICS_TABRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SPOOLSTATISTICS_TABRow AddSPOOLSTATISTICS_TABRow(
                        string PROJECTID, 
                        string SYSTEMID, 
                        string DRAWINGNO, 
                        string BLOCKNO, 
                        string INITIALSTATE, 
                        string WAITCHECKED, 
                        string APPROVEPASS, 
                        string PREPRODUCE, 
                        string WAITALLOCATE, 
                        string ONPRODUCE, 
                        string PREQC, 
                        string WAITQC, 
                        string PASSQC, 
                        string TOTAL, 
                        string COMPLETERATE, 
                        string COMPLETEINSTALL, 
                        string INSTALLING) {
                SPOOLSTATISTICS_TABRow rowSPOOLSTATISTICS_TABRow = ((SPOOLSTATISTICS_TABRow)(this.NewRow()));
                rowSPOOLSTATISTICS_TABRow.ItemArray = new object[] {
                        PROJECTID,
                        SYSTEMID,
                        DRAWINGNO,
                        BLOCKNO,
                        INITIALSTATE,
                        WAITCHECKED,
                        APPROVEPASS,
                        PREPRODUCE,
                        WAITALLOCATE,
                        ONPRODUCE,
                        PREQC,
                        WAITQC,
                        PASSQC,
                        TOTAL,
                        COMPLETERATE,
                        COMPLETEINSTALL,
                        INSTALLING};
                this.Rows.Add(rowSPOOLSTATISTICS_TABRow);
                return rowSPOOLSTATISTICS_TABRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                SPOOLSTATISTICS_TABDataTable cln = ((SPOOLSTATISTICS_TABDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new SPOOLSTATISTICS_TABDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPROJECTID = base.Columns["PROJECTID"];
                this.columnSYSTEMID = base.Columns["SYSTEMID"];
                this.columnDRAWINGNO = base.Columns["DRAWINGNO"];
                this.columnBLOCKNO = base.Columns["BLOCKNO"];
                this.columnINITIALSTATE = base.Columns["INITIALSTATE"];
                this.columnWAITCHECKED = base.Columns["WAITCHECKED"];
                this.columnAPPROVEPASS = base.Columns["APPROVEPASS"];
                this.columnPREPRODUCE = base.Columns["PREPRODUCE"];
                this.columnWAITALLOCATE = base.Columns["WAITALLOCATE"];
                this.columnONPRODUCE = base.Columns["ONPRODUCE"];
                this.columnPREQC = base.Columns["PREQC"];
                this.columnWAITQC = base.Columns["WAITQC"];
                this.columnPASSQC = base.Columns["PASSQC"];
                this.columnTOTAL = base.Columns["TOTAL"];
                this.columnCOMPLETERATE = base.Columns["COMPLETERATE"];
                this.columnCOMPLETEINSTALL = base.Columns["COMPLETEINSTALL"];
                this.columnINSTALLING = base.Columns["INSTALLING"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPROJECTID = new System.Data.DataColumn("PROJECTID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROJECTID);
                this.columnSYSTEMID = new System.Data.DataColumn("SYSTEMID", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSYSTEMID);
                this.columnDRAWINGNO = new System.Data.DataColumn("DRAWINGNO", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDRAWINGNO);
                this.columnBLOCKNO = new System.Data.DataColumn("BLOCKNO", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLOCKNO);
                this.columnINITIALSTATE = new System.Data.DataColumn("INITIALSTATE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnINITIALSTATE);
                this.columnWAITCHECKED = new System.Data.DataColumn("WAITCHECKED", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWAITCHECKED);
                this.columnAPPROVEPASS = new System.Data.DataColumn("APPROVEPASS", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPROVEPASS);
                this.columnPREPRODUCE = new System.Data.DataColumn("PREPRODUCE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREPRODUCE);
                this.columnWAITALLOCATE = new System.Data.DataColumn("WAITALLOCATE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWAITALLOCATE);
                this.columnONPRODUCE = new System.Data.DataColumn("ONPRODUCE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnONPRODUCE);
                this.columnPREQC = new System.Data.DataColumn("PREQC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPREQC);
                this.columnWAITQC = new System.Data.DataColumn("WAITQC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWAITQC);
                this.columnPASSQC = new System.Data.DataColumn("PASSQC", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPASSQC);
                this.columnTOTAL = new System.Data.DataColumn("TOTAL", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL);
                this.columnCOMPLETERATE = new System.Data.DataColumn("COMPLETERATE", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPLETERATE);
                this.columnCOMPLETEINSTALL = new System.Data.DataColumn("COMPLETEINSTALL", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPLETEINSTALL);
                this.columnINSTALLING = new System.Data.DataColumn("INSTALLING", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSTALLING);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SPOOLSTATISTICS_TABRow NewSPOOLSTATISTICS_TABRow() {
                return ((SPOOLSTATISTICS_TABRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new SPOOLSTATISTICS_TABRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(SPOOLSTATISTICS_TABRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SPOOLSTATISTICS_TABRowChanged != null)) {
                    this.SPOOLSTATISTICS_TABRowChanged(this, new SPOOLSTATISTICS_TABRowChangeEvent(((SPOOLSTATISTICS_TABRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SPOOLSTATISTICS_TABRowChanging != null)) {
                    this.SPOOLSTATISTICS_TABRowChanging(this, new SPOOLSTATISTICS_TABRowChangeEvent(((SPOOLSTATISTICS_TABRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SPOOLSTATISTICS_TABRowDeleted != null)) {
                    this.SPOOLSTATISTICS_TABRowDeleted(this, new SPOOLSTATISTICS_TABRowChangeEvent(((SPOOLSTATISTICS_TABRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SPOOLSTATISTICS_TABRowDeleting != null)) {
                    this.SPOOLSTATISTICS_TABRowDeleting(this, new SPOOLSTATISTICS_TABRowChangeEvent(((SPOOLSTATISTICS_TABRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSPOOLSTATISTICS_TABRow(SPOOLSTATISTICS_TABRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                SpoolDataSet ds = new SpoolDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SPOOLSTATISTICS_TABDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SPOOLSTATISTICS_TABRow : System.Data.DataRow {
            
            private SPOOLSTATISTICS_TABDataTable tableSPOOLSTATISTICS_TAB;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SPOOLSTATISTICS_TABRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSPOOLSTATISTICS_TAB = ((SPOOLSTATISTICS_TABDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PROJECTID {
                get {
                    try {
                        return ((string)(this[this.tableSPOOLSTATISTICS_TAB.PROJECTIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“SPOOLSTATISTICS_TAB”中列“PROJECTID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSPOOLSTATISTICS_TAB.PROJECTIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SYSTEMID {
                get {
                    try {
                        return ((string)(this[this.tableSPOOLSTATISTICS_TAB.SYSTEMIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“SPOOLSTATISTICS_TAB”中列“SYSTEMID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSPOOLSTATISTICS_TAB.SYSTEMIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DRAWINGNO {
                get {
                    try {
                        return ((string)(this[this.tableSPOOLSTATISTICS_TAB.DRAWINGNOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“SPOOLSTATISTICS_TAB”中列“DRAWINGNO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSPOOLSTATISTICS_TAB.DRAWINGNOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BLOCKNO {
                get {
                    try {
                        return ((string)(this[this.tableSPOOLSTATISTICS_TAB.BLOCKNOColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“SPOOLSTATISTICS_TAB”中列“BLOCKNO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSPOOLSTATISTICS_TAB.BLOCKNOColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INITIALSTATE {
                get {
                    try {
                        return ((string)(this[this.tableSPOOLSTATISTICS_TAB.INITIALSTATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“SPOOLSTATISTICS_TAB”中列“INITIALSTATE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSPOOLSTATISTICS_TAB.INITIALSTATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WAITCHECKED {
                get {
                    try {
                        return ((string)(this[this.tableSPOOLSTATISTICS_TAB.WAITCHECKEDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“SPOOLSTATISTICS_TAB”中列“WAITCHECKED”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSPOOLSTATISTICS_TAB.WAITCHECKEDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string APPROVEPASS {
                get {
                    try {
                        return ((string)(this[this.tableSPOOLSTATISTICS_TAB.APPROVEPASSColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“SPOOLSTATISTICS_TAB”中列“APPROVEPASS”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSPOOLSTATISTICS_TAB.APPROVEPASSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PREPRODUCE {
                get {
                    try {
                        return ((string)(this[this.tableSPOOLSTATISTICS_TAB.PREPRODUCEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“SPOOLSTATISTICS_TAB”中列“PREPRODUCE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSPOOLSTATISTICS_TAB.PREPRODUCEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WAITALLOCATE {
                get {
                    try {
                        return ((string)(this[this.tableSPOOLSTATISTICS_TAB.WAITALLOCATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“SPOOLSTATISTICS_TAB”中列“WAITALLOCATE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSPOOLSTATISTICS_TAB.WAITALLOCATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ONPRODUCE {
                get {
                    try {
                        return ((string)(this[this.tableSPOOLSTATISTICS_TAB.ONPRODUCEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“SPOOLSTATISTICS_TAB”中列“ONPRODUCE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSPOOLSTATISTICS_TAB.ONPRODUCEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PREQC {
                get {
                    try {
                        return ((string)(this[this.tableSPOOLSTATISTICS_TAB.PREQCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“SPOOLSTATISTICS_TAB”中列“PREQC”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSPOOLSTATISTICS_TAB.PREQCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string WAITQC {
                get {
                    try {
                        return ((string)(this[this.tableSPOOLSTATISTICS_TAB.WAITQCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“SPOOLSTATISTICS_TAB”中列“WAITQC”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSPOOLSTATISTICS_TAB.WAITQCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PASSQC {
                get {
                    try {
                        return ((string)(this[this.tableSPOOLSTATISTICS_TAB.PASSQCColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“SPOOLSTATISTICS_TAB”中列“PASSQC”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSPOOLSTATISTICS_TAB.PASSQCColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TOTAL {
                get {
                    try {
                        return ((string)(this[this.tableSPOOLSTATISTICS_TAB.TOTALColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“SPOOLSTATISTICS_TAB”中列“TOTAL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSPOOLSTATISTICS_TAB.TOTALColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPLETERATE {
                get {
                    try {
                        return ((string)(this[this.tableSPOOLSTATISTICS_TAB.COMPLETERATEColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“SPOOLSTATISTICS_TAB”中列“COMPLETERATE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSPOOLSTATISTICS_TAB.COMPLETERATEColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string COMPLETEINSTALL {
                get {
                    try {
                        return ((string)(this[this.tableSPOOLSTATISTICS_TAB.COMPLETEINSTALLColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“SPOOLSTATISTICS_TAB”中列“COMPLETEINSTALL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSPOOLSTATISTICS_TAB.COMPLETEINSTALLColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string INSTALLING {
                get {
                    try {
                        return ((string)(this[this.tableSPOOLSTATISTICS_TAB.INSTALLINGColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("表“SPOOLSTATISTICS_TAB”中列“INSTALLING”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSPOOLSTATISTICS_TAB.INSTALLINGColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPROJECTIDNull() {
                return this.IsNull(this.tableSPOOLSTATISTICS_TAB.PROJECTIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPROJECTIDNull() {
                this[this.tableSPOOLSTATISTICS_TAB.PROJECTIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSYSTEMIDNull() {
                return this.IsNull(this.tableSPOOLSTATISTICS_TAB.SYSTEMIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSYSTEMIDNull() {
                this[this.tableSPOOLSTATISTICS_TAB.SYSTEMIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDRAWINGNONull() {
                return this.IsNull(this.tableSPOOLSTATISTICS_TAB.DRAWINGNOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDRAWINGNONull() {
                this[this.tableSPOOLSTATISTICS_TAB.DRAWINGNOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLOCKNONull() {
                return this.IsNull(this.tableSPOOLSTATISTICS_TAB.BLOCKNOColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLOCKNONull() {
                this[this.tableSPOOLSTATISTICS_TAB.BLOCKNOColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINITIALSTATENull() {
                return this.IsNull(this.tableSPOOLSTATISTICS_TAB.INITIALSTATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINITIALSTATENull() {
                this[this.tableSPOOLSTATISTICS_TAB.INITIALSTATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWAITCHECKEDNull() {
                return this.IsNull(this.tableSPOOLSTATISTICS_TAB.WAITCHECKEDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWAITCHECKEDNull() {
                this[this.tableSPOOLSTATISTICS_TAB.WAITCHECKEDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAPPROVEPASSNull() {
                return this.IsNull(this.tableSPOOLSTATISTICS_TAB.APPROVEPASSColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAPPROVEPASSNull() {
                this[this.tableSPOOLSTATISTICS_TAB.APPROVEPASSColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPREPRODUCENull() {
                return this.IsNull(this.tableSPOOLSTATISTICS_TAB.PREPRODUCEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPREPRODUCENull() {
                this[this.tableSPOOLSTATISTICS_TAB.PREPRODUCEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWAITALLOCATENull() {
                return this.IsNull(this.tableSPOOLSTATISTICS_TAB.WAITALLOCATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWAITALLOCATENull() {
                this[this.tableSPOOLSTATISTICS_TAB.WAITALLOCATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsONPRODUCENull() {
                return this.IsNull(this.tableSPOOLSTATISTICS_TAB.ONPRODUCEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetONPRODUCENull() {
                this[this.tableSPOOLSTATISTICS_TAB.ONPRODUCEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPREQCNull() {
                return this.IsNull(this.tableSPOOLSTATISTICS_TAB.PREQCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPREQCNull() {
                this[this.tableSPOOLSTATISTICS_TAB.PREQCColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWAITQCNull() {
                return this.IsNull(this.tableSPOOLSTATISTICS_TAB.WAITQCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWAITQCNull() {
                this[this.tableSPOOLSTATISTICS_TAB.WAITQCColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPASSQCNull() {
                return this.IsNull(this.tableSPOOLSTATISTICS_TAB.PASSQCColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPASSQCNull() {
                this[this.tableSPOOLSTATISTICS_TAB.PASSQCColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTOTALNull() {
                return this.IsNull(this.tableSPOOLSTATISTICS_TAB.TOTALColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTOTALNull() {
                this[this.tableSPOOLSTATISTICS_TAB.TOTALColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPLETERATENull() {
                return this.IsNull(this.tableSPOOLSTATISTICS_TAB.COMPLETERATEColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPLETERATENull() {
                this[this.tableSPOOLSTATISTICS_TAB.COMPLETERATEColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCOMPLETEINSTALLNull() {
                return this.IsNull(this.tableSPOOLSTATISTICS_TAB.COMPLETEINSTALLColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCOMPLETEINSTALLNull() {
                this[this.tableSPOOLSTATISTICS_TAB.COMPLETEINSTALLColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsINSTALLINGNull() {
                return this.IsNull(this.tableSPOOLSTATISTICS_TAB.INSTALLINGColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetINSTALLINGNull() {
                this[this.tableSPOOLSTATISTICS_TAB.INSTALLINGColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SPOOLSTATISTICS_TABRowChangeEvent : System.EventArgs {
            
            private SPOOLSTATISTICS_TABRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SPOOLSTATISTICS_TABRowChangeEvent(SPOOLSTATISTICS_TABRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SPOOLSTATISTICS_TABRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591